name: Build & Release

on:
  push:
    tags:        
      - '*'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
  
      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew
  
      - name: Run packageReleaseDistributionForCurrentOS task
        run: ./gradlew packageReleaseDistributionForCurrentOS

      # Locate the produced .deb file and copy it to a fixed name so it can be used later
      - name: Find and copy .deb file
        run: |
          DEB_FILE=$(ls compose-app/build/compose/binaries/main-release/deb/*.deb | head -n 1)
          if [ -z "$DEB_FILE" ]; then
            echo "No .deb file found" >&2
            exit 1
          fi
          echo "Found .deb file: $DEB_FILE"
          cp "$DEB_FILE" "kvas-obfuscator-${{ github.ref_name }}.deb"

      # Upload the .deb file as an artifact for later use in the release
      - name: Upload Debian artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb
          path: kvas-obfuscator-${{ github.ref_name }}.deb

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
  
      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
  
      # Execute the Gradle tasks
      - name: Run packageReleaseDistributionForCurrentOS task
        run: ./gradlew packageReleaseDistributionForCurrentOS

      # Find the produced .msi file and copy it to a fixed name (msi.msi)
      - name: Find and copy .msi file
        shell: pwsh
        run: |
          $msiFile = Get-ChildItem -Path "compose-app\build\compose\binaries\main-release\msi\*.msi" | Select-Object -First 1
          if (-not $msiFile) {
              Write-Error "No MSI file found"
              exit 1
          }
          Write-Host "Found MSI file: $($msiFile.FullName)"
          Copy-Item $msiFile.FullName -Destination "kvas-obfuscator-${{ github.ref_name }}.msi"

      # Upload the .msi file as an artifact for later use in the release
      - name: Upload MSI artifact
        uses: actions/upload-artifact@v4
        with:
          name: msi
          path: kvas-obfuscator-${{ github.ref_name }}.msi

  create-release:
    name: Create GitHub Release with Artifacts
    needs: [build-ubuntu, build-windows]
    runs-on: ubuntu-latest
    steps:
      # Download the Debian artifact from the Ubuntu build job
      - name: Download Debian artifact
        uses: actions/download-artifact@v4
        with:
          name: deb
          path: artifacts
      # Download the MSI artifact from the Windows build job
      - name: Download MSI artifact
        uses: actions/download-artifact@v4
        with:
          name: msi
          path: artifacts

      # Create a GitHub release using the tag that triggered the workflow and attach the artifacts.
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            artifacts/kvas-obfuscator-${{ github.ref_name }}.deb
            artifacts/kvas-obfuscator-${{ github.ref_name }}.msi

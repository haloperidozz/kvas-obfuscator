name: Publish Web Release

on:
  push:
    tags:        
      - '*'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
  
      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew
  
      - name: Run wasmJsBrowserDistribution task
        run: ./gradlew wasmJsBrowserDistribution

      # Replace the files in the "web" branch with the production executable files
      - name: Update web branch with production executable files
        run: |
          # Configure Git (so that commits made by the action have an author)
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # Fetch and checkout the web branch. If it doesn’t exist, create an orphan branch.
          git fetch origin web || true
          git checkout -B web origin/web || git checkout --orphan web
          # Replace the current content with the production files from the gradle build.
          # (The || true here ignores any nonzero exit code from rsync.)
          rsync -a --delete compose-app/build/dist/wasmJs/productionExecutable/ . || true
          git add -A
          # Commit with the tag name. If there are no changes, don’t fail.
          git commit -m "${{ github.ref_name }}" || echo "No changes to commit"
          # Push the changes to the web branch (force push to replace its content)
          git push origin web --force